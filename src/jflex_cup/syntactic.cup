import java_cup.runtime.*;
import java.io.*;

/* ---------------------- user component section --------------------*/
parser code {:
	public void syntax_error(Symbol s) {
  		report_error("Syntax error in line " + s.left + " and column " + s.right, null);
	}

	public void unrecovered_syntax_error(Symbol s) throws java.lang.Exception {
  		report_fatal_error("", null);
	}
:}

terminal STATIC_OBJECT, DYNAMIC_OBJECT, LEFTBRACKET, RIGHTBRACKET, LOCATION, SCALE;
terminal SEMICOLON, BEGIN, ACTION, TYPE_FIGURE, DECLARATION, SPEED, WEIGHT;
terminal COMMA, RIGHTPARENT, LEFTPARENT, START_SIMULATION, END, ROTATION;
terminal Float REAL;
terminal String ID;

non terminal program;
non terminal Object body_declaration, static_declaration, dynamic_declaration, location, scale, weight;
non terminal Object body_action, body_program, attribute_declaration, value_static, rotation, speed;
non terminal Object value_dynamic, coordinates, value_object, static_dynamic, figure_declaration;

start with program;

program					::= BEGIN ID body_program END ;

body_declaration		::= LEFTBRACKET static_declaration static_dynamic RIGHTBRACKET
							| LEFTBRACKET dynamic_declaration static_dynamic RIGHTBRACKET 
							;

static_dynamic 			::= static_declaration static_dynamic
							| dynamic_declaration static_dynamic
							|
							;

static_declaration		::= STATIC_OBJECT figure_declaration LEFTBRACKET attribute_declaration RIGHTBRACKET ;

dynamic_declaration		::= DYNAMIC_OBJECT figure_declaration LEFTBRACKET value_object RIGHTBRACKET ;

body_action 			::= LEFTBRACKET START_SIMULATION SEMICOLON RIGHTBRACKET ;

body_program 			::= DECLARATION body_declaration ACTION body_action ;

figure_declaration 		::= TYPE_FIGURE ID ;

attribute_declaration 	::= value_static attribute_declaration | ;

value_object 			::= value_static value_object 
							| value_dynamic value_object 
							| 
							;

value_static 			::= location
							| rotation 
							| scale 
							;

value_dynamic 			::= weight 
							| speed 
							;

location				::= LOCATION coordinates SEMICOLON ;

rotation				::= ROTATION coordinates SEMICOLON ;

scale 					::= SCALE coordinates SEMICOLON ;

weight 					::= WEIGHT REAL SEMICOLON ;

speed 					::= SPEED coordinates SEMICOLON ;

coordinates 			::= LEFTPARENT REAL COMMA REAL COMMA REAL RIGHTPARENT ;